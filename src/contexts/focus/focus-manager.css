/**
 * Focus Manager Visual Feedback Styles
 * Provides visual indicators for focus management interactions
 */

/* Invalid jump attempt animation */
.focus-invalid-jump {
  position: relative;
  animation: focusInvalidJump 0.3s ease-out;
}

@keyframes focusInvalidJump {
  0%, 100% {
    transform: translateX(0);
    box-shadow: none;
  }
  15% {
    transform: translateX(-5px);
    box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.5);
  }
  30% {
    transform: translateX(5px);
  }
  45% {
    transform: translateX(-3px);
  }
  60% {
    transform: translateX(3px);
  }
  75% {
    transform: translateX(-1px);
  }
}

/* Visual indicator for navigation mode */
[data-navigation-mode="keyboard"] {
  --focus-ring-color: #3b82f6; /* Blue for keyboard */
}

[data-navigation-mode="mouse"] {
  --focus-ring-color: #10b981; /* Green for mouse */
}

[data-navigation-mode="hybrid"] {
  --focus-ring-color: #8b5cf6; /* Purple for hybrid */
}

/* Enhanced focus styles based on navigation mode */
[data-navigation-mode] *:focus {
  outline: 2px solid var(--focus-ring-color, #3b82f6);
  outline-offset: 2px;
}

/* Clickable step indicators */
.focus-step-clickable {
  cursor: pointer;
  transition: all 0.2s ease;
}

.focus-step-clickable:hover {
  transform: scale(1.05);
  background-color: rgba(59, 130, 246, 0.1);
}

/* Disabled step indicators */
.focus-step-disabled {
  cursor: not-allowed;
  opacity: 0.5;
  position: relative;
}

.focus-step-disabled::after {
  content: '';
  position: absolute;
  inset: 0;
  background: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 5px,
    rgba(0, 0, 0, 0.05) 5px,
    rgba(0, 0, 0, 0.05) 10px
  );
  pointer-events: none;
}

/* Focus flow visualization (for debugging) */
.focus-flow-debug [data-focus-order]::before {
  content: attr(data-focus-order);
  position: absolute;
  top: -20px;
  left: 0;
  background: #3b82f6;
  color: white;
  padding: 2px 6px;
  border-radius: 3px;
  font-size: 11px;
  font-weight: bold;
  z-index: 10000;
}

/* Mouse interaction feedback */
.focus-mouse-click-feedback {
  position: relative;
}

.focus-mouse-click-feedback::after {
  content: '';
  position: absolute;
  inset: -4px;
  border: 2px solid var(--focus-ring-color, #10b981);
  border-radius: inherit;
  opacity: 0;
  animation: focusClickFeedback 0.4s ease-out;
  pointer-events: none;
}

@keyframes focusClickFeedback {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(1.1);
  }
}

/* Hybrid mode indicator */
.focus-mode-indicator {
  position: fixed;
  bottom: 20px;
  right: 20px;
  padding: 8px 16px;
  background: rgba(0, 0, 0, 0.8);
  color: white;
  border-radius: 20px;
  font-size: 12px;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 8px;
  z-index: 9999;
  transition: all 0.3s ease;
}

.focus-mode-indicator[data-mode="keyboard"]::before {
  content: '‚å®Ô∏è';
}

.focus-mode-indicator[data-mode="mouse"]::before {
  content: 'üñ±Ô∏è';
}

.focus-mode-indicator[data-mode="hybrid"]::before {
  content: '‚å®Ô∏èüñ±Ô∏è';
}

/* Focus trap boundaries (for modals) */
.focus-trap-boundary {
  position: relative;
}

.focus-trap-boundary::before,
.focus-trap-boundary::after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(90deg, 
    transparent,
    rgba(59, 130, 246, 0.3) 20%,
    rgba(59, 130, 246, 0.3) 80%,
    transparent
  );
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.focus-trap-boundary::before {
  top: 0;
}

.focus-trap-boundary::after {
  bottom: 0;
}

.focus-trap-boundary.focus-trap-active::before,
.focus-trap-boundary.focus-trap-active::after {
  opacity: 1;
}

/* Skip link for accessibility */
.focus-skip-link {
  position: absolute;
  top: -40px;
  left: 0;
  background: #1e40af;
  color: white;
  padding: 8px 16px;
  text-decoration: none;
  border-radius: 0 0 4px 4px;
  transition: top 0.2s ease;
  z-index: 10000;
}

.focus-skip-link:focus {
  top: 0;
}